# pylint: disable=unused-argument
# flake8: noqa

from typing import TypeAlias, Any, List
GLPixels: TypeAlias = bytes | list[int]
GLBuffer: TypeAlias = bytes | list[int]
GLProgram: TypeAlias = bytes | list[int]

def glActiveTexture(texture: int) -> None: ...
def glBegin(flags: int) -> None: ...
def glBindBuffer(n: int, buffer: GLBuffer) -> None: ...
def glBindTexture(flag: int, texture_id: int) -> None: ...
def glBlendFunc(flag: int, flag2: int) -> None: ...
def glBufferData(target: int, data: bytes | list[int], usage: int) -> None: ...
def glClear(flags: int) -> None: ...
def glClearColor(r: float, g: float, b: float, a: float) -> None: ...
def glColor(*args) -> None: ...
def glColor3f(r: float, g: float, b: float) -> None: ...
def glColor4f(r: float, g: float, b: float, a: float) -> None: ...
def glColor4fv(color: List[float]) -> None: ...
def glColorMask(r: int, g: int, b: int, a: int) -> None: ...
def glColorPointer(size: int, datatype: int, stride: int, pointer: Any) -> None: ...
def glDeleteBuffers(n: int, buffers: list[list[int | Any]]) -> None: ...
def glDeleteTextures(n: int, textures: list[int]) -> None: ...
def glDepthMask(flag: int) -> None: ...
def glDisable(flags: int) -> None: ...
def glDisableClientState(flags: int) -> None: ...
def glDisableVertexArrayAttrib(vaobj: int, index: int) -> None: ...
def glDisableVertexAttribArray(index: int) -> None: ...
def glDrawArrays(mode: int, first: int, count: int) -> None: ...
def glDrawElements(flag: int, count: int, datatype: int, pointer: Any) -> None: ...
def glEnable(flags: int) -> None: ...
def glEnableClientState(flags: int) -> None: ...
def glEnableVertexAttribArray(index: int) -> None: ...
def glEnd() -> None: ...
def glFlush() -> None: ...
def glGenBuffers(n: int) -> GLBuffer | list[GLBuffer]: ...
def glGenTextures(count: int) -> int | list[int]: ...
def glGetAttribLocation(program: int, name: str) -> int: ...
def glGetFloat(flag: int) -> float: ...
def glGetFloatv(flag: int) -> list[float]: ...
def glGetIntegerv(flag: int) -> list[int]: ...
def glGetString(flag: int) -> str: ...
def glGetUniformLocation(program: int, name: str) -> int: ...
def glHint(hint: int, value: int) -> None: ...
def glIsTexture(texture_id: int) -> bool: ...
def glLineStipple(thickness: int, pattern: int) -> None: ...
def glLineWidth(thickness: float) -> None: ...
def glLoadIdentity() -> None: ...
def glMatrixMode(flags: int) -> None: ...
def glPixelStorei(pname: int, param: int) -> None: ...
def glPopAttrib() -> None: ...
def glPopClientAttrib() -> None: ...
def glPopMatrix() -> None: ...
def glPushAttrib(flags: int) -> None: ...
def glPushClientAttrib(flags: int) -> None: ...
def glPushMatrix() -> None: ...
def glRasterPos(x: float, y: float) -> None: ...
def glRotate(angle: float, x: float, y: float, z: float) -> None: ...
def glScalef(x: float, y: float, z: float) -> None: ...
def glScale(x: float, y: float, z: float) -> None: ...
def glScissor(left: int, bottom: int, width: int, height: int) -> None: ...
def glStencilFunc(a: int, b: int, c: int) -> None: ...
def glStencilMask(flag: int) -> None: ...
def glStencilOp(a: int, b: int, c: int) -> None: ...
def glTexCoord(s: float, t: float) -> None: ...
def glTexCoord2f(s: float, t: float) -> None: ...
def glTexCoordPointer(size: int, datatype: int, stride: int, pointer: Any) -> None: ...
def glTexEnvi(target: int, pname: int, param: int) -> None: ...
def glTexEnvf(target: int, pname: int, param: float) -> None: ...
def glTexImage2D(_a: int, _b: int, _c: int, _d: int, _e:int, f: int, g: int, h: int, pixels: GLPixels) -> None: ...
def glTexParameteri(texture: int, pname: int, param: int) -> None: ...
def glTexParameterf(texture: int, pname: int, param: float) -> None: ...
def glTexSubImage2D(texture: int, level: int, xoffset: int, yoffset: int, width: int, height: int, image_format: int, image_type: int, pixels: GLPixels) -> None: ...
def glTranslatef(x: float, y: float, z: float) -> None: ...
def glTranslate(x: float, y: float, z: float) -> None: ...
def glUniform4fv(location: int, count: int, value: list[Any] | tuple[Any]) -> None: ...
def glUseProgram(program: int) -> None: ...
def glVertex(*args) -> None: ...
def glVertex2i(x: int, y: int) -> None: ...
def glVertex2f(x: float, y: float) -> None: ...
def glVertexAttribPointer(index: int, size: int, vtype: int, stride: int, normalized: int, pointer: Any) -> None: ...
def glVertexPointer(size: int, datatype: int, stride: int, pointer: Any) -> None: ...


GL_ALIASED_LINE_WIDTH_RANGE: int
GL_ALPHA: int
GL_ALPHA_TEST: int
GL_ARRAY_BUFFER: int
GL_BLEND: int
GL_CLAMP_TO_EDGE: int
GL_CLIENT_ALL_ATTRIB_BITS: int
GL_COLOR_ARRAY: int
GL_COLOR_BUFFER_BIT: int
GL_CULL_FACE: int
GL_DEPTH_BUFFER_BIT: int
GL_DEPTH_TEST: int
GL_DEPTH_WRITEMASK: int
GL_DONT_CARE: int
GL_DYNAMIC_DRAW: int
GL_ENABLE_BIT: int
GL_EQUAL: int
GL_EXTENSIONS: int
GL_FALSE: int
GL_FLOAT: int
GL_FRAGMENT_SHADER: int
GL_KEEP: int
GL_LINEAR: int
GL_LINE_LOOP: int
GL_LINE_SMOOTH: int
GL_LINE_SMOOTH_HINT: int
GL_LINE_STIPPLE: int
GL_LINE_STRIP: int
GL_LINE_WIDTH: int
GL_MAJOR_VERSION: int
GL_MINOR_VERSION: int
GL_MODELVIEW: int
GL_MODULATE: int
GL_NEAREST: int
GL_NEVER: int
GL_NOTEQUAL: int
GL_ONE_MINUS_ALPHA: int
GL_ONE_MINUS_SRC_ALPHA: int
GL_PROJECTION: int
GL_QUADS: int
GL_RED: int
GL_REPEAT: int
GL_REPLACE: int
GL_RGBA: int
GL_SCISSOR_TEST: int
GL_SMOOTH_LINE_WIDTH_GRANULARITY: int
GL_SMOOTH_LINE_WIDTH_RANGE: int
GL_SRC_ALPHA: int
GL_STENCIL_BUFFER_BIT: int
GL_STENCIL_TEST: int
GL_TEXTURE0: int
GL_TEXTURE_2D: int
GL_TEXTURE_COORD_ARRAY: int
GL_TEXTURE_ENV: int
GL_TEXTURE_ENV_MODE: int
GL_TEXTURE_LINEAR: int
GL_TEXTURE_MAG_FILTER: int
GL_TEXTURE_MIN_FILTER: int
GL_TEXTURE_WRAP_S: int
GL_TEXTURE_WRAP_T: int
GL_TRANSFORM_BIT: int
GL_TRIANGLES: int
GL_TRIANGLE_STRIP: int
GL_TRUE: int
GL_UNPACK_ALIGNMENT: int
GL_UNSIGNED_BYTE: int
GL_UNSIGNED_INT: int
GL_UNSIGNED_SHORT: int
GL_VENDOR: int
GL_VERSION: int
GL_VERTEX_ARRAY: int
GL_VERTEX_SHADER: int
